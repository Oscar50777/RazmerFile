<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>PDF Viewer с обрезным полем</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.14.305/pdf.min.js"></script> 
    <style>
        body {
            font-family: sans-serif;
            padding: 20px;
        }
        .page-info {
            border: 1px solid #ccc;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 8px;
        }
        canvas {
            border: 1px solid #999;
            max-width: 100%;
            display: block;
            margin-top: 10px;
        }
        .preview-title {
            margin-top: 15px;
            font-weight: bold;
        }
        .crop-size {
            margin-top: 8px;
            color: red;
            font-weight: bold;
        }
        .controls {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<h2>Загрузите PDF:</h2>
<input type="file" id="pdf-file" accept="application/pdf">

<div class="controls">
    <label for="crop-margin">Размер обрезного поля:</label>
    <select id="crop-margin">
        <option value="2" selected>2 мм</option>
        <option value="3">3 мм</option>
        <option value="4">4 мм</option>
        <option value="5">5 мм</option>
    </select>
</div>

<div id="output"></div>

<script>
    let cropMarginMM = 2;

    document.getElementById('crop-margin').addEventListener('change', function () {
        cropMarginMM = parseFloat(this.value);
        reRenderAllPages();
    });

    let currentPDF = null;

    document.getElementById('pdf-file').addEventListener('change', async function (e) {
        const file = e.target.files[0];
        if (!file) return;

        const reader = new FileReader();
        reader.onload = async function () {
            currentPDF = await pdfjsLib.getDocument({ data: reader.result }).promise;
            document.getElementById('output').innerHTML = `<p>Всего страниц: ${currentPDF.numPages}</p>`;
            reRenderAllPages();
        };
        reader.readAsArrayBuffer(file);
    });

    async function reRenderAllPages() {
        if (!currentPDF) return;

        const output = document.getElementById('output');
        const container = output.querySelector('.page-info');

        // Очищаем все страницы
        const pagesContainer = document.createElement('div');
        const header = output.querySelector('p');
        if (header) pagesContainer.appendChild(header);

        for (let i = 1; i <= currentPDF.numPages; i++) {
            const page = await currentPDF.getPage(i);
            const div = showPageSizeWithPreview(page, i);
            pagesContainer.appendChild(div);
        }

        output.innerHTML = '';
        output.appendChild(pagesContainer);
    }

    function mmToPx(mm, dpi = 300) {
        return (mm * dpi) / 25.4;
    }

    function showPageSizeWithPreview(page, pageNumber) {
        const viewport = page.getViewport({ scale: 300 / 72 });

        const pageWidthPx = viewport.width;
        const pageHeightPx = viewport.height;

        const widthMM = (pageWidthPx * 25.4) / (viewport.scale * 72);
        const heightMM = (pageHeightPx * 25.4) / (viewport.scale * 72);

        const container = document.createElement('div');
        container.className = 'page-info';

        container.innerHTML = `
            <strong>Страница ${pageNumber}</strong><br>
            Размер в миллиметрах: <strong>${widthMM.toFixed(1)} × ${heightMM.toFixed(1)} мм</strong><br>
            Обрезной формат: <span id="crop-format-${pageNumber}">...</span><br>
            <div class="preview-title">Превью страницы (обрезное поле):</div>
            <canvas id="canvas-${pageNumber}" width="${Math.round(pageWidthPx)}" height="${Math.round(pageHeightPx)}"></canvas>
            <div class="crop-size" id="crop-size-${pageNumber}">Обрезной формат: ... мм</div>
        `;

        const canvas = document.createElement('canvas');
        canvas.id = `canvas-${pageNumber}`;
        canvas.width = Math.round(pageWidthPx);
        canvas.height = Math.round(pageHeightPx);
        container.querySelector('.preview-title').after(canvas);

        const cropSizeDiv = document.createElement('div');
        cropSizeDiv.className = 'crop-size';
        cropSizeDiv.id = `crop-size-${pageNumber}`;
        container.appendChild(cropSizeDiv);

        const ctx = canvas.getContext('2d');
        const renderContext = {
            canvasContext: ctx,
            viewport: viewport
        };

        page.render(renderContext).promise.then(() => {
            drawCropMarks(ctx, viewport, pageNumber);
        });

        return container;
    }

    function drawCropMarks(ctx, viewport, pageNumber) {
        const scaleX = viewport.scale;
        const scaleY = viewport.scale;

        const pageWidthPx = viewport.width;
        const pageHeightPx = viewport.height;

        const widthMM = (pageWidthPx * 25.4) / (scaleX * 72);
        const heightMM = (pageHeightPx * 25.4) / (scaleY * 72);

        const cropWidthMM = widthMM - cropMarginMM * 2;
        const cropHeightMM = heightMM - cropMarginMM * 2;

        const innerWidthPx = (cropWidthMM * scaleX * 72) / 25.4;
        const innerHeightPx = (cropHeightMM * scaleY * 72) / 25.4;

        const marginX = (cropMarginMM * scaleX * 72) / 25.4;
        const marginY = (cropMarginMM * scaleY * 72) / 25.4;

        // Рамка
        ctx.setLineDash([5, 5]);
        ctx.strokeStyle = 'red';
        ctx.lineWidth = 2;
        ctx.strokeRect(marginX, marginY, innerWidthPx, innerHeightPx);
        ctx.setLineDash([]);

        // Текст внутри рамки
        ctx.fillStyle = 'red';
        ctx.font = 'bold 16px sans-serif';
        ctx.textAlign = 'center';
        ctx.textBaseline = 'middle';

        const text = `${Math.round(cropWidthMM)} × ${Math.round(cropHeightMM)} мм`;
        ctx.fillText(text, marginX + innerWidthPx / 2, marginY + innerHeightPx / 2);

        // Обновляем текст под изображением
        const cropSizeDiv = document.getElementById(`crop-size-${pageNumber}`);
        if (cropSizeDiv) {
            cropSizeDiv.textContent = `Обрезной формат: ${Math.round(cropWidthMM)} × ${Math.round(cropHeightMM)} мм`;
        }

        const cropFormatSpan = document.getElementById(`crop-format-${pageNumber}`);
        if (cropFormatSpan) {
            cropFormatSpan.textContent = `${Math.round(cropWidthMM)} × ${Math.round(cropHeightMM)} мм`;
        }
    }
</script>

</body>
</html>
